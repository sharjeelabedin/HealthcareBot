name: Docker-Compose Build and Deploy

on:
  push:
    branches:
      - main  # Adjust as needed

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image using docker-compose
        run: docker-compose build

      - name: Save Docker image as tar
        run: docker save -o frontend.tar frontend:latest

      - name: Giving read permission
        run: chmod +r frontend.tar

      - name: Create deployment directory on EC2 server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: mkdir -p /home/ubuntu/deployment

      - name: Copy frontend to EC2 server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: frontend.tar
          target: /home/ubuntu/deployment/frontend.tar

      - name: SSH into EC2 server and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            # Check if Docker is installed
            if ! command -v docker &> /dev/null
            then
              echo "Docker is not installed. Installing Docker..."
              sudo apt-get update
              sudo apt-get install -y apt-transport-https ca-certificates curl gnupg-agent software-properties-common
              curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
              sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
              sudo apt-get update
              sudo apt-get install -y docker-ce docker-ce-cli containerd.io
              sudo usermod -aG docker ubuntu
            else
              echo "Docker is already installed"
            fi

            # Check if Nginx is installed
            if ! command -v nginx &> /dev/null
            then
              echo "Nginx is not installed. Installing Nginx..."
              sudo apt-get update
              sudo apt-get install -y nginx
              sudo systemctl start nginx
              sudo systemctl enable nginx
            else
              echo "Nginx is already installed"
            fi

            # Configure Nginx to proxy to port 3000
            sudo bash -c 'cat > /etc/nginx/sites-available/default <<EOF
            server {
                listen 80;
                server_name _;

                location / {
                    proxy_pass http://localhost:3000;
                    proxy_set_header Host \$host;
                    proxy_set_header X-Real-IP \$remote_addr;
                    proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto \$scheme;
                }
            }
            EOF'
            sudo nginx -s reload

            # Load Docker image and deploy
            sudo docker load -i /home/ubuntu/deployment/frontend.tar
            
            # Check if the frontend container is running and stop/remove if necessary
            if [ "$(sudo docker ps -q -f name=frontend)" ]; then
                sudo docker stop frontend
                sudo docker rm frontend
            else
                echo "Frontend container is not running."
            fi
            
            sudo docker run -d --restart unless-stopped --name frontend -p 3000:3000 frontend:latest
            sudo /etc/init.d/nginx reload
            sudo docker system prune -f

      - name: Waiting for frontend to spin up
        run: sleep 60
